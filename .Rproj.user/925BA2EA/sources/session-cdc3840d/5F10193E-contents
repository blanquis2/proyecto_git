
#paq
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("Biostrings")

library(BiocManager)
library(Biostrings)


##18 septiembre

###STR  de selección

#Se sule ejecutar línea a línea, pero no siempre se requiere de esto#
#Existen varios condicionales: 

###IF###

#Arroja valores boleanos|Lo que entra se llama cuerpo de la condición if#
#Uso de {}#
#Sintaxis: if (<condición>){ejecuta la lína de código que se ponga}#

#Ejercicios

mayor_de_edad<-18

edad<-14

if(eda >=mayor_de_edad){
  print("Eres mayor de edad") #Error en el objeto edad#
}

if(edad >=mayor_de_edad){
  print("Eres mayor de edad") #Si la condición no se cumple, no imprime nada porque no se indicó#
}

minimo<-20000
dinero<-15000

if(dinero>=minimo){
  print("¿Cómo está Cancún?")
  print("La vida es buena")
  sobrante<-dinero-minimo
  print(paste("Me queda $", sobrante))
}
print("Acá sigue")

##COLAPSO: manera de que se acorte todo lo que tengo dentro de la condición (flechita a lado de la primera lpinea de código)##

#7.1.2.1

estatura<-1.85
ideal<-1.70

if(estatura >ideal){
  print("Si eres más alto")
}

#7.1.2.2
library(BiocManager)
library(Biostrings)

fasta_seq1 <- readDNAStringSet("C:/Users/52427/Downloads/sequence.fasta")
fasta_seq2 <- readDNAStringSet("C:/Users/52427/Downloads/sequence (1).fasta")

tamaño1<-width(fasta_seq1)
tamaño2<-width(fasta_seq2)

if(fasta_seq1>fasta_seq2){print("No tienen el mismo tamaño")
  diferencia<-tamaño1-tamaño2
  print(paste("La diferencia es", diferencia))}

#AlphabetFrecuency:te da un conteo por bases(sumadas te da el total)#

###AND###
#Basta co que una proposición sea falsa"
#Uso del operador 0 o |#
#Uso de tabla de la verdad#

##OR###
# Con este, solo es falso si ambas condiciones son falsas##
#Puede tenerse que con el Or quede la posibilidad un poco ambigua en los rangos"

###EJERCICIOS

#7.3.1
pozole<-TRUE
mole<-FALSE
if(pozole == TRUE & mole == FALSE){print("Prefieres el pozole")}

##Recordar que == pide un valor exacto, es mejor asignar un valor exacto, aunque hay formas con else para poner todas las formas de un sit#

###23 de septiembre

#Instalación de paquetes#

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("msa")

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("BSgenome")
BiocManager::install("BSgenome.Ecoli.NCBI.20080805")

#Clase XString: base para crear un objeto de DNA, RNA O AA

library(Biostrings)
library(BiocManager)
#Strings=caracteres; bio=vida
###Crear un objeto Biostrigs

dna <- DNAString("ACGTAGCTGACT")

###Objeto con una secuencia de NCBI#

#Se usar readDNAstrigSET para un objeto que lea secuecuencia#
fasta_seq1 <- readDNAStringSet("C:/Users/52427/Downloads/sequence.fasta") 

###Subconjuntos

#Uso de []#

subseq(fasta_seq1, start=3,end=100) ##subseq

dna[3:6]##otra manera de hacer un subconjunto

#para buscar más una secuencia usar dnastringset#

dna2 <- DNAStringSet(c("ACGT", "GTCA", "GCTA"))

#DNAstring usa el sistema iupac

#asignar nombres a un dnastringset#

names(dna2)<-paste0("secuencia_", 1:3)#a las secuencias de dna2, asignales el nombre secuencia_ del uno al 3#


#tamaño#

#width

width(dna2)

#rev

rev(dna2)#reverso de la secuencia#

#complement
a
complement(dna2)

#translate

translate(dna2)

#alphabetFrequency, calcula frecuencia de caracteres#

#letterFrequency, calcula el némero de letras específicas#

###If else##

minimo<-20000
vacaciones<-"SI"
dinero<-21000

if(dinero>=minimo & vacaciones=="SI"){
  print("Me voy a la playa, looser")
}else{##su condición continua aquí si la primera condición no se cumple#
  print("Me quedo en mi casa")
}

#####ifelse###

#ejercicio#

edad<-15

if(edad>18){
  print("ya eres viejito")
}else{
  print("Aún eres joven")
  dif<-18-edad
  print(paste("Te faltan", dif))
}

ladyS<-readline(prompt="¿Has leído Lady Susan?")
if(ladyS=="si"){
  print("es una joyita ¿verdad?")
}else{
  print("Te la recomiendo, obra muy olvidada de Jane Austen")
}

#Ejercicio las estaciones del año#

mes<-12
if(mes >= 3 & mes <= 6){
  print("Eres una flor de primavera")
}else if (mes >=7 & mes <=9){
  print("Eres la brisa del verano")
}else if (mes >=9 & mes <=11){
  print("Eres una preciosa calabaza")
}else{
  print("Copito de nieve")
}

mes<-8
if(mes >= 3 | mes <= 6){
  print("Eres una flor de primavera")
}else if (mes >=7 | mes <=9){
  print("Eres la brisa del verano")
}else if (mes >=9 | mes <=11){
  print("Eres una preciosa calabaza")
}else{
  print("Eres un copito de nieve")
}

#Ejercicio si es tu cumpleaños que te felicite#

mesdecumpleaños<-12
diadecumpleaños<-23
if(mesdecumpleaños ==9 & diadecumpleaños ==23){
  print("old and bitter")
}else{
  print("young and bitter")
}

##Ejercios nuevas librearías##

library(BSgenome.Ecoli.NCBI.20080805)
library(BSgenome)
library(BiocIO)
library(GenomicRanges)
library(rtracklayer)

BSgenome.Ecoli.NCBI.20080805
seqnames(BSgenome.Ecoli.NCBI.20080805)

#Porcentaje de GC DE E.coli´s"

BSgenome.Ecoli.NCBI.20080805$NC_008253->e_coli_1
e_coli_1
alphabetFrequency(e_coli_1)
letterFrequency(e_coli_1,"GC")->e_coli_1_gc


BSgenome.Ecoli.NCBI.20080805$NC_008563->e_coli_2
letterFrequency(e_coli_2,"GC")->e_coli_2_gc

BSgenome.Ecoli.NCBI.20080805$NC_010468->e_coli_3
alphabetFrequency(e_coli_3)
letterFrequency(e_coli_3,"GC")->e_coli_3_gc

BSgenome.Ecoli.NCBI.20080805$NC_010498->e_coli_4
alphabetFrequency(e_coli_4)
letterFrequency(e_coli_4,"GC")->e_coli_4_gc

#Uso de condicionales con estas librearías#

if(e_coli_1_gc>e_coli_2_gc){
  print("")
}else{
  print("Aún eres joven")
  dif<-18-edad
  print(paste("Te faltan", dif))
}

##Ejercios 25 de septiembre##

#3.#

ph<-3.8

if(ph >=0 & ph <=1){
  print("Es un pH muy ácido")
}else if (ph >=2 & ph >=4){
  print("Es un pH moderadamente ácido")
  print("Por ejemplo el jugo de limón")
}else if (ph >= 5 & ph >=6){
  print("Es un pH ligeramente ácido")
  print("Por ejemplo la orina")
}else if (ph >= 7 & ph <=7.9){
  print("Es un pH neutro")
  print("Por ejemplo el agua destilada")
}else if (ph >= 8 & ph <=9.5){
  print("Ligeramente alcalino")
  print("Por ejemplo la orina")
}else if (ph >= 9.6 & ph >=11){
  print("Es un pH moderadamente alcalino")
  print("Por ejmplo la leche de magnesio")
}else if (ph >= 13 & ph <=14){
  print("Es un pH muy alcalino")
  print("Por ejemplo blanqueador o productos de limpieza para desagÜes")
}

class(ph)
#Si vas a hacer un promt y quieres que lo lea como un número, requieres usar as.numeric#

#4

temperatura<-as.numeric(readline(prompt="¿Cuál es la temperatura a la que crece tu microorganismo?"))

if(temperatura >=20 & temperatura <=45){
  print("Tu organismo es mesófilo")
}  
  
##Librería msa:hacer alineamientos múltiples de objetos con BIOSTRINGS#

##Hacer un alineamiento de aa de las cepas de e.coli, primero hacer un translate#

#Traducción a aa##

translate(e_coli_1, genetic.code=GENETIC_CODE, no.init.codon=FALSE,if.fuzzy.codon="error")->e_coli_1_t
e_coli_1_t
prot1<-e_coli_1_t[1:201]
prot1

translate(e_coli_2, genetic.code=GENETIC_CODE, no.init.codon=FALSE,if.fuzzy.codon="error")->e_coli_2_t
e_coli_2_t

translate(e_coli_3,genetic.code=GENETIC_CODE, no.init.codon=FALSE,if.fuzzy.codon="error")->e_coli_3_t
e_coli_3_t
prot3<-e_coli_3_t[1:201]
prot3

translate(e_coli_4,genetic.code=GENETIC_CODE, no.init.codon=FALSE,if.fuzzy.codon="error")->e_coli_4_t
e_coli_4_t
prot4<-e_coli_4_t[1:201]

e_colis<-AAStringSet(list(prot1,prot3,prot4))
e_colis
View(e_colis)

alineamineto1<-msa(e_colis,method = "ClustalW")
alineamineto1

##Ejercicio con globinas

globins<-readAAStringSet("C:/Users/52427/Downloads/DivergentGlobins.fasta")
globins
alineamiento2<-msa(globins)
alineamiento2



#30 de septiembre de 2024

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("ggmsa")
BiocManager::install("jsonlite")
library(jsonlite)
library(ggmsa)

                          ####Trabajar con orden en R####

#Al compartir un archivo en R#
#1.Compartir los documentos(Que todos estén en un sitio común)

#1.New proyect Wizard#
#2.Nuevo proyecto (y nombrarlo)
#3.



